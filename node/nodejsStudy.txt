[핵심 개념 이해하기]

Nodejs는 크롬 V8 자바스크립트 엔진으로 빌드된 자바스크립트 런타임이다.

이벤트 기반, 논블로킹 I/O 모델을 사용해 가볍고 효율적이다.
패키지 생태계인 npm은 세계에서 가장 큰 오픈 소스 라이브러리 생태계이기도 하다.


노드를 보통 서버로 사용하지만 이외에도 다양한 어플리케이션을 실행할 수 있다.

서버란?
네트워크를 통하여 클라이언트에 정보나 서비스를 제공하는 컴퓨터 또는 프로그램을 말한다.

클라이언트란?
요청을 보내는 주체(브라우저, 데스크톱 프로그램, 모바일 앱 혹은 서버일 수 도있다.)


런타임?
특정 언어로 만든 프로그램을 실행할 수 있는 환경
(결국 노드는 자바스크립트 프로그램을 컴퓨터에서 실행할 수 있게 해준다.)

기존에는 자바스크립트 프로그램을 인터넷 브라우저 위에서만 실행할 수 있었다.
노드는 구글의 V8 엔진과 libuv라는 라이브러리 사용하며 브라우저 이외의 환경에서도 javascript를 사용할 수 있게해줬다.

libuv는 이벤트와 논블로킹 입출력 모델을 구현한다.

이벤트 기반?
이벤트가 발생할 때 미리 지정해둔 작업을 수행하는 방식을 의미한다.(클릭, 네트워크요청 등)

1.이벤트 리스너에 콜백함수를 등록한다.
2.이벤트 발생
3.등록된 콜백 함수 호출

루프 - 여러 이벤트가 동시에 발생했을 때 어떤 순서로 콜백 함수를 호출할지 이벤트 루프가 판단한다. (호출스택, 백그라운드, 태스크 큐) 
*스택 - 후입선출 (미리 쌓아두고 위에서부터 나가는 형태)/ 큐 - 선입 선출 (선착순)
컨텍스트 - 함수가 호출되었을 때 생성되는 환경을 의미한다. (자바스크립트는 실행 시 기본적으로 전역 컨텍스트 안에서 돌아간다고 생각하는게 좋다.)
*호출스택에 함수들이 너무 많이 차있으면 setTimeout의 시간이 정확하지 않을 수 있다.
*이벤트 루프를 잘 활용하면 오래 걸리는 작업을 효율적으로 처리할 수 있다. 오래 걸리는 함수를 백그라운드로 보내서 다음 코드가 먼저 실행되게 하고 그 함수가 다시 태스크 큐를 거쳐 호출 스 택으로 올라오기를 기다리는 방식이다.
논블로킹 I/O?
*이벤트 루프를 잘 활용하면 오래 걸리는 작업을 효율적으로 처리할 수 있다. 오래 걸리는 함수를 백그라운드로 보내서 다음 코드가 먼저 실행되게 하고 그 함수가 다시 태스크 큐를 거쳐 호출 스 택으로 올라오기를 기다리는 방식이다.
이것을 논블로킹 I/O 방식이다.
즉 이전 작업이 완료될 때까지 기다리지 않고 바로 다음 작업을 수행함을 뜻한다.

서버로서의 노드?
노드는 웹 서버가 내장되어 있어 입문자도 쉽게 접근할 수 있다.
노드는 생산성은 좋다. 하지만 GO처럼 비동기에 강점을 보이는 언어나 Nginx처럼 정적 파일 제공, 로드 밸런싱에 특화된 서버에 비해서는 속도가 느리다.
그러나 극단적인 성능이 필요하지 않는다면 이러한 단점은 노드의 생산성으로 어느 정도 극복가능하다.

자바스크립트를 사용하기 때문에 얻을 수 있는 소소한 장점도 있다.
요즘은 xml대신 json을 사용해서 데이터를 주고 받는데 json이 자바스크립트 형식이어서 노드에서는 쉽게 처리할 수 있다.

서버 외의 노드?

노드 기반으로 돌아가는 대표적인 웹 프레임워크로는 Angular과 React, Vue, Meteor 등이 있다.
Angular는 구글 진영에서 프론트엔드 앱을 만들 때 주로 사용한다.
React 페이스북 진영에서 주로 사용한다.
모바일 개발 도구로는 React Native와 Ionic Framework를 많이 사용한다.
페이스북,인스타그램,에어이엔비,월마트,테슬라 등이 React Native를 사용하여 모바일 앱을 운영 중이다.
데스크톱 개발 도구로는 Electrodl eovywjrdlsek. Atom, Slack, Discord 등이 있다.
비주얼 스튜디오 코드도 Electron으로 만들어졌다.

